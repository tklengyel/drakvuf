name: compile
on:
  pull_request:
    branches: [ master ]
jobs:
  compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'ubuntu-20.04'
    env:
      CC: clang
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -q
          sudo apt-get remove -y clang
          sudo apt-get install -y clang-10 autoconf-archive flex bison libjson-c-dev libxen-dev
      - name: Install LibVMI
        run: |
          git submodule update --init libvmi
          cd libvmi
          autoreconf -vif
          ./configure --disable-kvm --disable-file --disable-bareflank --disable-examples --disable-vmifs
          make -j2
          sudo make install
          sudo ldconfig
          cd ..
      - name: autoreconf
        run: autoreconf -vif
      - name: Compile
        run: |
          ./configure
          make -j2
          make -j2 clean
      - name: Compile debug
        run: |
          ./configure --enable-debug
          make -j2
          make -j2 clean
      - name: Compile with plugin disabled
        run: |
          ./configure --enable-debug --disable-plugin-syscalls
          make -j2
          make -j2 clean
      - name: Compile with sanitizer enabled
        run: |
          ./configure --enable-debug --enable-sanitize
          make -j2
          make -j2 clean
      - name: Compile with REPL
        run: |
          sudo pip3 install ctypesgen ipython
          ./configure --enable-debug --enable-repl
          make -j2
          make -j2 clean
      - name: Compile from make dist tarball
        run: |
          ./configure
          make -j2 dist
          mkdir build && cd build
          tar xvf ../drakvuf-*.tar.gz
          cd *drakvuf*
          ./autogen.sh
          ./configure
          make -j2
