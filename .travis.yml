dist: bionic
language: c
sudo: true
compiler: clang
git:
    submodules: false

env:
    global:
        # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
        #   via the "travis encrypt" command using the project repo's public key
        - secure: "$COVERITY_SCAN_TOKEN"

matrix:
    include:

#
# Whitespace check
#
    - env:
        - TEST="whitespace"
      script:
        - git remote add upstream https://github.com/$TRAVIS_REPO_SLUG.git
        - git fetch upstream
        - git diff --check upstream/master

#
# Astyle check
#
    - env:
        - TEST="astyle"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install astyle
      script:
        - export ARTISTIC_STYLE_OPTIONS=".astylerc" && astyle -Q `find . | egrep "\.c|\.h"` > astyle.out
        - TEST=$(cat astyle.out | wc -l)
        - |
          if [[ $TEST -ne 0 ]]; then
            cat astyle.out
            git --no-pager diff
            echo "Please fix style issues as shown above"
            exit 1
          fi

#
# compile tests
#
    - env:
        - TEST="compile"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      install:
        - ./autogen.sh
      script:
        - ./configure || cat config.log
        - make

    - env:
        - TEST="compile with plugin disabled"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      install:
        - ./autogen.sh
      script:
        - ./configure --disable-plugin-syscalls || cat config.log
        - make

    - env:
        - TEST="compile debug"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      install:
        - ./autogen.sh
      script:
        - ./configure --enable-debug --enable-sanitize || cat config.log
        - make

    - env:
        - TEST="compile debug with plugin disabled"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      install:
        - ./autogen.sh
      script:
        - ./configure --enable-debug --disable-plugin-syscalls || cat config.log
        - make

#
# Coverity
#
    - env:
        - TEST="Coverity"
      addons:
        coverity_scan:
            project:
                name: "$COVERITY_PROJECT_NAME"
                description: "Build submitted via Travis CI"
            notification_email: $COVERITY_NOTIFICATION_EMAIL
            build_command_prepend: "./autogen.sh; ./configure --enable-debug; make clean"
            build_command:   "make"
            branch_pattern: $COVERITY_BRANCH_PATTERN
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      script:
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

#
# clang scan-build
#
    - env:
        - TEST="scan-build" CXX_COMPILER=clang++-10 CXX_STDLIB=g++-9
      addons:
        apt:
          packages:
            - clang-10
            - clang-tools-10
            - g++-9
            - bison
            - flex
            - libjson-c-dev
            - autoconf-archive
            - libxen-dev
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      before_install:
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
      install:
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
        - ./autogen.sh
      script:
        - scan-build-10 --status-bugs --use-cc=clang-10 --use-c++=clang++-10 -analyze-headers -disable-checker deadcode.DeadStores ./configure --enable-debug
        - scan-build-10 --status-bugs --use-cc=clang-10 --use-c++=clang++-10 -analyze-headers -disable-checker deadcode.DeadStores make

#
# SonarCloud
#
    - env:
        - TEST="SonarCloud"
      dist: xenial
      edge: true
      addons:
        sonarcloud:
            organization: "drakvuf"
            token:
                secure: "$SONAR_TOKEN"
      before_install:
        - sudo apt-get update
        - sudo apt-get -q -y install bison flex libjson-c-dev autoconf-archive libxen-dev
        - export INSTALLDIR=$PWD/usr/local/
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/usr/local/lib
        - export C_INCLUDE_PATH=$PWD/usr/local/include
        - export CPLUS_INCLUDE_PATH=$PWD/usr/local/include
        - export PKG_CONFIG_PATH="$PWD/usr/local/lib/pkgconfig/"
        - export LDFLAGS="-L$PWD/usr/local/lib"
        - export CFLAGS="-I$PWD/usr/local/include"
        - git submodule update --init libvmi
        - cd libvmi
        - autoreconf -vif
        - ./configure --prefix=${INSTALLDIR} --disable-kvm --disable-file --disable-bareflank --disable-safety-checks
        - make
        - make install
        - cd ..
      install:
        - ./autogen.sh
      script:
        - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then exit 0; fi'
        - ./configure --enable-debug
        - build-wrapper-linux-x86-64 --out-dir bw-output make -j2
        - sonar-scanner
